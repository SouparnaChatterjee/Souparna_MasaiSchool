function circularTraversal(matrix) {
  if (!matrix || matrix.length === 0) return [];
  
  const n = matrix.length;
  let result = ""; 
  
  let top = 0;
  let bottom = n - 1;
  let left = 0;
  let right = n - 1; 
  let direction = 0;
  
  while (top <= bottom && left <= right) {
    if (direction === 0) {
      for (let i = bottom; i >= top; i--) {
        result += matrix[i][left]+" ";
      }
      left++;
      direction = 1;
    }
    else if (direction === 1) { 
      for (let i = left; i <= right; i++) {
        result += matrix[top][i]+" ";
      }
      top++;
      direction = 2;
    }
    else if (direction === 2) { 
      for (let i = top; i <= bottom; i++) {
        result += matrix[i][right]+" ";
      }
      right--;
      direction = 3;
    }
    else if (direction === 3) { 
      for (let i = right; i >= left; i--) {
        result += matrix[bottom][i]+" ";
      }
      bottom--;
      break;
    }
  }
  
  console.log(result);
  return result; 
}
const testMatrix = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9]
];

circularTraversal(testMatrix);
