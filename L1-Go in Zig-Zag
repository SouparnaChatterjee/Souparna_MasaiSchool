function zigZagTraversal(matrix) {
  if (!matrix || matrix.length === 0) return "";
  
  const rows = matrix.length;
  const cols = matrix[0].length;
  let result = "";
  
  // Start from top-right corner
  let row = 0;
  let col = cols - 1;
  
  // First move left across the top row
  while (col >= 0) {
    result += matrix[row][col] + " ";
    col--;
  }
  
  // Now we're at the top-left corner, move to the next row
  row = 1;
  col = 0;
  let goingRight = true;
  
  // Process remaining rows
  while (row < rows) {
    if (goingRight) {
      // Move right across the current row
      while (col < cols) {
        result += matrix[row][col] + " ";
        col++;
      }
      col--; // Adjust after going out of bounds
    } else {
      // Move left across the current row
      while (col >= 0) {
        result += matrix[row][col] + " ";
        col--;
      }
      col++;
    }
    
    row++; 
    goingRight = !goingRight; 
  }
  
  return result.trim();
}

const testMatrix = [
  [1, 2, 3, 4, 5],
  [6, 7, 8, 9, 1],
  [3, 2, 5, 4, 6],
  [7, 8, 9, 1, 2]
];

console.log(zigZagTraversal(testMatrix));
// Output: 5 4 3 2 1 6 7 8 9 1 6 4 5 2 3 7 8 9 1 2

